{"version":3,"sources":["components/UI/Button/Button.module.scss","views/Mining/Mining.module.scss","components/UI/MainContainer/MainContainer.module.scss","components/UI/Card/Card.module.scss","common.module.scss","i18n.js","utils/utils.js","constants/wallets.js","hooks/useWallet.js","constants/chains.js","hooks/useUpdate.js","hooks/useQuery.js","hooks/useWindowDimensions.js","hooks/useIsMobileView.js","components/UI/Button/Button.jsx","components/Header/Header.jsx","components/UI/MainContainer/MainContainer.js","components/UI/Card/Card.jsx","constants/addresses.js","hooks/useContract.js","hooks/useIsMounted.js","hooks/useInvitation.js","views/About/About.jsx","hooks/useToken.js","components/Mining/MiningNFTAction/MiningNFTAction.jsx","hooks/useManager.js","components/Mining/MiningLeaderboard/MiningLeaderboard.jsx","components/Countdown/Countdown.js","components/Mining/MiningProfileListItem/MiningProfileListItem.jsx","components/Mining/MiningProfile/MiningProfile.jsx","views/Mining/Mining.jsx","App.js","index.js","views/About/About.module.scss","components/Mining/MiningProfileListItem/MiningProfileListItem.module.scss","components/Mining/MiningNFTAction/MiningNFTAction.module.scss","components/Header/Header.module.scss","components/Mining/MiningLeaderboard/MiningLeaderboard.module.scss","components/Countdown/Countdown.module.scss","components/Mining/MiningProfile/MiningProfile.module.scss"],"names":["module","exports","loadPath","i18next","use","HttpBackend","LanguageDetector","initReactI18next","init","debug","fallbackLng","interpolation","escapeValue","ns","defaultNS","detection","order","supportedLngs","backend","react","transKeepBasicHtmlNodesFor","DAY","HOUR","MONTH","truncAddress","addr","length","substring","FETCH_STATE","readContractReducer","state","action","type","isLoading","isError","data","payload","Error","toHex","decimalNum","toString","NFT_PATTERNS","PATTERN_UNKNOWN","PATTERN","VALUE","DURATION","PATTERN_100U_3D","PATTERN_100U_7D","PATTERN_100U_15D","PATTERN_100U_30D","PATTERN_500U_3D","PATTERN_500U_7D","PATTERN_500U_15D","PATTERN_500U_30D","PATTERN_1000U_3D","PATTERN_1000U_7D","PATTERN_1000U_15D","PATTERN_1000U_30D","PATTERN_2000U_3D","PATTERN_2000U_7D","PATTERN_2000U_15D","PATTERN_2000U_30D","NFTS","id","value","DURATIONS","duration","unit","unitText","fromPattern","pattern","patternObj","Object","values","find","item","WALLET","METAMASK","name","link","ONTO","WALLETCONNECT","TARGET_CHAIN","chain","rpc","faucets","nativeCurrency","symbol","decimals","infoURL","shortName","chainId","networkId","explorers","url","standard","DEFAULT_RPC","walletContext","createContext","useWallet","useContext","ProvideWallet","children","wallet","useState","account","setAccount","ethers","providers","JsonRpcProvider","ethersProvider","setEthersProvider","resetDefault","useCallback","disconnect","provider","console","error","sessionStorage","removeItem","window","location","reload","connect","verifyChain","Number","request","method","handleChainChanged","networkData","chainName","rpcUrls","blockExplorerUrls","log","params","message","detectEthereumProvider","timeout","ethereumProvider","onto","open","on","Web3Provider","JSON","stringify","useEffect","parse","isMounted","getAccounts","tempAccount","send","accounts","toLowerCase","useProvideWallet","Provider","updateContext","useUpdate","ProvideUpdate","update","timer","setTimer","timerId","setInterval","Date","now","clearInterval","updateByTimer","useProvideUpdate","queryContext","ProvideQuery","query","search","useLocation","URLSearchParams","useProvideQuery","getWindowDimensions","width","innerWidth","height","innerHeight","useIsMobileView","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","Button","props","className","onClick","secondary","loading","disabled","gradient","classNames","styles","defaultProps","LINKS","text","path","langs","key","label","Header","isMobileView","menuCollapsed","setMenuCollapsed","currentLang","setCurrentLang","useTranslation","i18n","t","resolvedLanguage","toggleMenu","langMenu","items","changeLanguage","menu","iconWrap","src","alt","navWrap","map","to","isActive","navLink","active","overlay","mobileLangButton","e","preventDefault","walletWrap","langButton","walletButton","MenuOutlined","menuIcon","MainContainer","classnames","Card","MANAGER_ADDRESS","INVITATION_ADDRESS","TOKENS","useManagerContract","useMemo","Contract","MANAGER_ABI","abi","getSigner","useInvitationContract","INVITATION_ABI","useERC20Contract","address","utils","isAddress","IERC20_ABI","useIsMounted","useRef","current","REFERRAL_LIST","rank","reward","About","style","backgroundImage","themeImageWrap","mainContent","introWrap","commonStyles","gradientTitle","mainText","Trans","i18nKey","featureWrap","supportWrap","alignSelf","imageWrap","referralWrap","titleWrap","title","referralLinkWrap","referralLink","onCopy","success","button","referralList","referralListItem","ordinal","useTokenBalance","tokenAddress","accountAddress","useReducer","dispatch","tokenContract","fetchData","parseInt","getBalance","balanceOf","formatEther","MiningNFTAction","setParams","invitationContract","defaultInviterCode","parseBytes32String","useDefaultInviterCode","isRegistered","useIsRegistered","managerContract","buy","patterns","inviterCode","totalValue","reduce","accum","formatBytes32String","parseEther","tx","wait","receipt","useBuy","buyState","isValidInvitation","code","registeredInvitationCodeContains","result","useRegisteredInvitationCodeContains","nativeBalance","get","acceptBalance","nftSelectorWrap","subtitle","selectorList","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","Item","prev","square","nftSelectorListItem","nftPrice","durationSelectorWrap","durationSelectorListItem","toPattern","info","RANK","MiningLeaderboard","listWrap","listTitle","list","listItem","Countdown","sec","min","hour","day","timeLeft","setTimeLeft","timestamp","addLeadingZeros","val","String","setTimeout","endTS","diff","timeLeftLocal","year","Math","floor","calculateTimeLeft","clearTimeout","countdownCol","colon","getTime","MiningProfileListItem","redeemHandler","claimHandler","record","img","contentWrap","durationTag","valueWrap","valueItem","endTime","claimable","buttonWrap","MINING_LIST","MiningProfile","header","stats","statsItem","miningList","Mining","section1","App","exact","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.ec0313bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Ajf-\",\"gradient\":\"Button_gradient__2rm0D\",\"secondary\":\"Button_secondary__19x43\",\"disabled\":\"Button_disabled__1OC_4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Mining\":\"Mining_Mining__2H5sM\",\"section1\":\"Mining_section1__2BHbp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"MainContainer_MainContainer__15KuF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__3BNlI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientTitle\":\"common_gradientTitle__F6N76\",\"mainText\":\"common_mainText__1rYvo\",\"square\":\"common_square__1SSMz\"};","import i18next from \"i18next\";\nimport HttpBackend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\nconst apiKey = \"R_jW4ZYfH6bxdB5R4afB7w\";\nconst loadPath = `https://api.i18nexus.com/project_resources/translations/{{lng}}/{{ns}}.json?api_key=${apiKey}`;\n\ni18next\n  .use(HttpBackend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    debug: false,\n    fallbackLng: \"en\",\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    ns: [\"default\"],\n    defaultNS: \"default\",\n    detection: { order: [\"localStorage\", \"htmlTag\"] },\n\n    supportedLngs: [\n      \"en\",\n      // \"it\",\n      // \"ro\",\n      // \"ko\",\n      \"ru\",\n      \"es\",\n      // \"el\",\n      // \"bn\",\n      \"hi\",\n      // \"hu\",\n      // \"vi\",\n      // \"ja\",\n      \"zh\",\n      \"fr\",\n      // \"de\",\n      // \"pt\",\n      \"ar\",\n      // \"fi\",\n    ],\n\n    backend: {\n      loadPath,\n    },\n    react: {\n      // nodes allowed to be kept\n      transKeepBasicHtmlNodesFor: [\n        \"br\",\n        \"strong\",\n        \"i\",\n        \"p\",\n        \"span\",\n        \"ul\",\n        \"li\",\n      ],\n    },\n  });\n","export const ACCEPT_TOKEN_CONVERSION_RATIO = 1 / 1000;\n\nexport const MOBILE_BREAK_POINT = 765;\n\nexport const SECOND = 1;\nexport const MINUTES = SECOND * 60;\nexport const HOUR = MINUTES * 60;\nexport const DAY = HOUR * 24;\nexport const MONTH = DAY * 30;\nexport const YEAR = DAY * 365;\n\nexport const truncAddress = (addr) => {\n  if (addr && addr.length === 42) {\n    return `${addr.substring(0, 6)}...${addr.substring(addr.length - 4)}`;\n  }\n  return \"\";\n};\n\n// check if a timestamp is from the past, need to be in millisecond\nexport const checkTime = (ts) => new Date().getTime() > ts;\n\nexport const FETCH_STATE = {\n  INIT: 0,\n  SUCCESS: 1,\n  FAILURE: 2,\n};\n\n// reducer for general contract calls including states: loading, error, data\nexport const readContractReducer = (state, action) => {\n  switch (action.type) {\n    case FETCH_STATE.INIT:\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n      };\n    case FETCH_STATE.SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload,\n      };\n    case FETCH_STATE.FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      };\n    default:\n      throw new Error(\"Invalid general contract action\");\n  }\n};\n\n// convert decimal number to Hex string\nexport const toHex = (decimalNum) => `0x${decimalNum.toString(16)}`;\n\nexport const NFT_PATTERNS = {\n  PATTERN_UNKNOWN: { PATTERN: 0, VALUE: null, DURATION: null },\n\n  PATTERN_100U_3D: { PATTERN: 1, VALUE: 100, DURATION: 3 },\n  PATTERN_100U_7D: { PATTERN: 2, VALUE: 100, DURATION: 7 },\n  PATTERN_100U_15D: { PATTERN: 3, VALUE: 100, DURATION: 15 },\n  PATTERN_100U_30D: { PATTERN: 4, VALUE: 100, DURATION: 30 },\n\n  PATTERN_500U_3D: { PATTERN: 5, VALUE: 500, DURATION: 3 },\n  PATTERN_500U_7D: { PATTERN: 6, VALUE: 500, DURATION: 7 },\n  PATTERN_500U_15D: { PATTERN: 7, VALUE: 500, DURATION: 15 },\n  PATTERN_500U_30D: { PATTERN: 8, VALUE: 500, DURATION: 30 },\n\n  PATTERN_1000U_3D: { PATTERN: 9, VALUE: 1000, DURATION: 3 },\n  PATTERN_1000U_7D: { PATTERN: 10, VALUE: 1000, DURATION: 7 },\n  PATTERN_1000U_15D: { PATTERN: 11, VALUE: 1000, DURATION: 15 },\n  PATTERN_1000U_30D: { PATTERN: 12, VALUE: 1000, DURATION: 30 },\n\n  PATTERN_2000U_3D: { PATTERN: 13, VALUE: 2000, DURATION: 3 },\n  PATTERN_2000U_7D: { PATTERN: 14, VALUE: 2000, DURATION: 7 },\n  PATTERN_2000U_15D: { PATTERN: 15, VALUE: 2000, DURATION: 15 },\n  PATTERN_2000U_30D: { PATTERN: 16, VALUE: 2000, DURATION: 30 },\n};\n\nexport const NFTS = [\n  { id: 1, value: 100 },\n  { id: 2, value: 500 },\n  { id: 3, value: 1000 },\n  { id: 4, value: 2000 },\n];\n\nexport const DURATIONS = [\n  { id: 1, duration: 3, unit: DAY, unitText: \"Days\" },\n  { id: 2, duration: 7, unit: DAY, unitText: \"Days\" },\n  { id: 3, duration: 15, unit: DAY, unitText: \"Days\" },\n  { id: 4, duration: 30, unit: DAY, unitText: \"Days\" },\n];\n\nexport const toPattern = (value, duration) => {\n  // const patternKey = `PATTERN_${value}U_${duration}D`;\n  // if (!Object.keys(NFT_PATTERNS).includes(patternKey)) {\n  //   return NFT_PATTERNS.PATTERN_UNKNOWN;\n  // }\n  // return NFT_PATTERNS[patternKey];\n  const patternObj = Object.values(NFT_PATTERNS).find(\n    (item) => item.VALUE === value && item.DURATION === duration\n  );\n  if (!patternObj) {\n    return NFT_PATTERNS.PATTERN_UNKNOWN.PATTERN;\n  }\n  return patternObj.PATTERN;\n};\n\nexport const fromPattern = (pattern) => {\n  const patternObj = Object.values(NFT_PATTERNS).find(\n    (item) => item.PATTERN === pattern\n  );\n  if (!patternObj) {\n    return [null, null];\n  }\n  return { value: patternObj.VALUE, duration: patternObj.DURATION };\n};\n","export const WALLET = {\n  METAMASK: {\n    name: \"MetaMask\",\n    type: \"metamask\",\n    link: \"\",\n  },\n  ONTO: {\n    name: \"ONTO\",\n    type: \"onto\",\n    link: \"\",\n  },\n  WALLETCONNECT: {\n    name: \"WalletConnect\",\n    type: \"walletConnect\",\n    link: \"\",\n  },\n  // BINANCE: {\n  //   name: 'Binance',\n  //   type: 'binance',\n  //   link: '',\n  // },\n  // COINBASE: {\n  //   name: 'Coinbase',\n  //   type: 'coinbase',\n  //   link: '',\n  // },\n  // TRUST: {\n  //   name: 'Trust',\n  //   type: 'trust',\n  //   link: '',\n  // },\n  // WALLETCONNECT: {\n  //   name: 'WalletConnect',\n  //   type: 'walletConnect',\n  //   link: '',\n  // },\n  // SAFEPAL: {\n  //   name: 'SafePal',\n  //   type: 'safepal',\n  //   link: '',\n  // },\n  // IMTOKEN: {\n  //   name: 'imToken',\n  //   type: 'imtoken',\n  //   link: '',\n  // },\n  // TOKENPOCKET: {\n  //   name: 'TokenPocket',\n  //   type: 'tokenPocket',\n  //   link: '',\n  // },\n\n  // CLOVER: {\n  //   name: 'Clover',\n  //   type: 'clover',\n  //   link: '',\n  // },\n  // COIN98: {\n  //   name: 'Coin98',\n  //   type: 'coin98',\n  //   link: '',\n  // },\n  // LIQUALITY: {\n  //   name: 'Liquality',\n  //   type: 'liquality',\n  //   link: '',\n  // },\n  // BLOCTO: {\n  //   name: 'Blocto',\n  //   type: 'blocto',\n  //   link: '',\n  // },\n  // PORTIS: {\n  //   name: 'Portis',\n  //   type: 'portis',\n  //   link: '',\n  // },\n  // FORTMATIC: {\n  //   name: 'Fortmatic',\n  //   type: 'fortmatic',\n  //   link: '',\n  // },\n};\n\nexport default WALLET;\n","import React, {\n  useState,\n  useEffect,\n  useContext,\n  createContext,\n  useCallback,\n} from \"react\";\nimport { message } from \"antd\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\n// import WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport PropTypes from \"prop-types\";\nimport { ethers } from \"ethers\";\nimport { toHex } from \"../utils/utils\";\nimport { WALLET } from \"../constants/wallets\";\n\nimport { CHAINS } from \"../constants/chains\";\n\nconst TARGET_CHAIN = CHAINS.OEC;\n\nconst DEFAULT_RPC = TARGET_CHAIN.rpc[0];\n\nconst walletContext = createContext();\n\nexport const useWallet = () => useContext(walletContext);\n\n// Provider hook that creates auth object and handles state\nfunction useProvideWallet() {\n  const [account, setAccount] = useState(null);\n  const [ethersProvider, setEthersProvider] = useState(\n    new ethers.providers.JsonRpcProvider(DEFAULT_RPC)\n  );\n\n  const resetDefault = useCallback(() => {\n    setAccount(null);\n    setEthersProvider(new ethers.providers.JsonRpcProvider(DEFAULT_RPC));\n  }, []);\n\n  const disconnect = async () => {\n    resetDefault();\n    try {\n      await ethersProvider.provider.disconnect(); // end walletconnect session\n    } catch (err) {\n      console.error(\"no disconnect func\");\n    }\n    sessionStorage.removeItem(\"wallet\");\n    window.location.reload();\n  };\n\n  // connect to chain\n  const connect = useCallback(async (wallet = WALLET.METAMASK) => {\n    // helper: verify current chain with target\n    const verifyChain = async (provider) => {\n      // const chainId = parseInt(await provider.request({ method: 'eth_chainId' }), 16);\n      const chainId = Number(await provider.request({ method: \"eth_chainId\" }));\n      // console.log('current chainId:', chainId);\n      return chainId === TARGET_CHAIN.chainId;\n    };\n    // handle chain change\n    const handleChainChanged = async (provider) => {\n      // add/switch chain to target chain\n      if (!(await verifyChain(provider))) {\n        const networkData = {\n          chainId: toHex(TARGET_CHAIN.chainId),\n          chainName: TARGET_CHAIN.name,\n          nativeCurrency: TARGET_CHAIN.nativeCurrency,\n          rpcUrls: TARGET_CHAIN.rpc,\n          blockExplorerUrls: [TARGET_CHAIN.explorers[0].url],\n        };\n        console.log(\"networkData\", networkData);\n\n        await provider.request({\n          method: \"wallet_addEthereumChain\",\n          params: [networkData, null],\n        });\n\n        // verify chain switch\n        if (!(await verifyChain(provider))) {\n          message.error(\"Chain Error.\");\n          throw new Error(\"Chain switch failed\");\n        }\n      }\n    };\n\n    try {\n      let ethereumProvider;\n      try {\n        ethereumProvider = await detectEthereumProvider({ timeout: 1000 });\n      } catch (err) {\n        console.error(err);\n      }\n      // handle multi wallets\n      let provider;\n      // let tempProvider;\n      switch (wallet.type) {\n        // case WALLET.WALLETCONNECT.type:\n        //   console.log(wallet.type);\n        //   tempProvider = new WalletConnectProvider({\n        //     rpc: {\n        //       56: \"https://bsc-dataseed1.binance.org\",\n        //     },\n        //     chainId: 56,\n        //     network: \"binance\",\n        //   });\n        //   //  Enable session (triggers QR Code modal)\n        //   try {\n        //     await tempProvider.enable();\n        //     provider = tempProvider;\n        //   } catch (err) {\n        //     console.log(err);\n        //   }\n        //   break;\n        case WALLET.ONTO.type:\n          provider = window.onto || ethereumProvider;\n          break;\n        default:\n          provider = ethereumProvider;\n      }\n\n      // handle no provider\n      if (!provider) {\n        console.log(\"No provider detected\");\n        window.open(\n          wallet.link,\n          \"_blank\" // <- This is what makes it open in a new window.\n        );\n        return;\n      }\n\n      // unlock wallet\n      try {\n        await provider.request({ method: \"eth_requestAccounts\" });\n      } catch (err) {\n        console.log(\"eth_requestAccounts failed\");\n      }\n\n      // add event listener\n      if (wallet.type !== WALLET.ONTO.type) {\n        // listen to chainChanged\n        provider.on(\"chainChanged\", () => {\n          window.location.reload();\n        });\n\n        // listen to accountsChanged\n        provider.on(\"accountsChanged\", () => {\n          window.location.reload();\n        });\n      }\n\n      // change chain\n      await handleChainChanged(provider);\n\n      // set ethersProvider\n      setEthersProvider(new ethers.providers.Web3Provider(provider));\n\n      // set auto connect\n      sessionStorage.wallet = JSON.stringify(wallet);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (sessionStorage.wallet) {\n      connect(JSON.parse(sessionStorage.wallet));\n    }\n  }, [connect]);\n\n  useEffect(() => {\n    let isMounted = true;\n    const getAccounts = async () => {\n      let tempAccount = null;\n      if (ethersProvider instanceof ethers.providers.Web3Provider) {\n        try {\n          const accounts = await ethersProvider.send(\"eth_accounts\", []);\n          if (accounts.length !== 0) {\n            tempAccount = accounts[0].toLowerCase();\n          }\n        } catch (err) {\n          console.error(\"noWalletConnected\", err);\n        }\n      }\n      if (isMounted) {\n        setAccount(tempAccount);\n      }\n    };\n    getAccounts();\n    return () => {\n      isMounted = false;\n    };\n  }, [ethersProvider]);\n\n  return {\n    account,\n    connect,\n    disconnect,\n    ethersProvider,\n  };\n}\n\nexport function ProvideWallet({ children }) {\n  const wallet = useProvideWallet();\n  return (\n    <walletContext.Provider value={wallet}>{children}</walletContext.Provider>\n  );\n}\n\nProvideWallet.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","export const CHAINS = {\n  BSC: {\n    name: \"BSC Mainnet\",\n    chain: \"BSC\",\n    rpc: [\n      \"https://bsc-dataseed1.binance.org\",\n      \"https://bsc-dataseed2.binance.org\",\n      \"https://bsc-dataseed3.binance.org\",\n      \"https://bsc-dataseed4.binance.org\",\n      \"https://bsc-dataseed1.defibit.io\",\n      \"https://bsc-dataseed2.defibit.io\",\n      \"https://bsc-dataseed3.defibit.io\",\n      \"https://bsc-dataseed4.defibit.io\",\n      \"https://bsc-dataseed1.ninicoin.io\",\n      \"https://bsc-dataseed2.ninicoin.io\",\n      \"https://bsc-dataseed3.ninicoin.io\",\n      \"https://bsc-dataseed4.ninicoin.io\",\n      \"wss://bsc-ws-node.nariox.org\",\n    ],\n    faucets: [\"https://free-online-app.com/faucet-for-eth-evm-chains/\"],\n    nativeCurrency: {\n      name: \"Binance Chain Native Token\",\n      symbol: \"BNB\",\n      decimals: 18,\n    },\n    infoURL: \"https://www.binance.org\",\n    shortName: \"bsc\",\n    chainId: 56,\n    networkId: 56,\n    slip44: 714,\n    explorers: [\n      { name: \"bscscan\", url: \"https://bscscan.com\", standard: \"EIP3091\" },\n    ],\n  },\n  OEC: {\n    name: \"OKXChain Mainnet\",\n    chain: \"okexchain\",\n    rpc: [\"https://exchainrpc.okex.org\"],\n    faucets: [\"https://free-online-app.com/faucet-for-eth-evm-chains/\"],\n    nativeCurrency: {\n      name: \"OKExChain Global Utility Token\",\n      symbol: \"OKT\",\n      decimals: 18,\n    },\n    infoURL: \"https://www.okex.com/okexchain\",\n    shortName: \"okt\",\n    chainId: 66,\n    networkId: 66,\n    explorers: [\n      {\n        name: \"OKLink\",\n        url: \"https://www.oklink.com/okexchain\",\n        standard: \"EIP3091\",\n      },\n    ],\n  },\n};\n","import { createContext, useContext, useEffect, useState } from \"react\";\nimport { PropTypes } from \"prop-types\";\n// import { useWallet } from './useWallet';\n\nconst updateContext = createContext();\n\nexport const useUpdate = () => useContext(updateContext);\n\nconst useProvideUpdate = () => {\n  const [timer, setTimer] = useState();\n\n  useEffect(() => {\n    let isMounted = true;\n    const timerId = setInterval(() => {\n      if (isMounted) setTimer(Date.now());\n    }, 5000);\n    return () => {\n      isMounted = false;\n      clearInterval(timerId);\n    };\n  }, []);\n\n  return { updateByTimer: timer };\n};\n\nexport function ProvideUpdate({ children }) {\n  const update = useProvideUpdate();\n  return (\n    <updateContext.Provider value={update}>{children}</updateContext.Provider>\n  );\n}\nProvideUpdate.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React, { createContext, useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst queryContext = createContext();\n\nexport const useQuery = () => useContext(queryContext);\n\nconst useProvideQuery = () => {\n  const { search } = useLocation();\n  const [query] = useState(new URLSearchParams(search));\n  return query;\n};\n\nexport function ProvideQuery({ children }) {\n  const query = useProvideQuery();\n  return <queryContext.Provider value={query}>{children}</queryContext.Provider>;\n}\nProvideQuery.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import { MOBILE_BREAK_POINT } from \"../utils/utils\";\nimport { useWindowDimensions } from \"./useWindowDimensions\";\n\nexport const useIsMobileView = () => {\n  const { width } = useWindowDimensions();\n  return width <= MOBILE_BREAK_POINT;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport styles from \"./Button.module.scss\";\n\nconst Button = (props) => {\n  const {\n    className,\n    children,\n    onClick,\n    secondary,\n    loading,\n    disabled,\n    gradient,\n  } = props;\n  return (\n    <div\n      className={classNames(\n        styles.Button,\n        className,\n        { [styles.gradient]: gradient },\n        { [styles.secondary]: secondary },\n        { [styles.disabled]: disabled },\n        { [styles.loading]: loading }\n      )}\n      onClick={onClick}\n    >\n      {children}\n    </div>\n  );\n};\n\nButton.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n  secondary: PropTypes.bool,\n  loading: PropTypes.bool,\n  disabled: PropTypes.bool,\n  gradient: PropTypes.bool,\n};\n\nButton.defaultProps = {\n  className: \"\",\n  children: null,\n  onClick: () => {},\n  secondary: false,\n  loading: false,\n  disabled: false,\n  gradient: false,\n};\n\nexport default Button;\n","import React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Dropdown, Menu } from \"antd\";\nimport { MenuOutlined } from \"@ant-design/icons\";\nimport classNames from \"classnames\";\n\nimport { useTranslation } from \"react-i18next\";\n\nimport { useIsMobileView } from \"../../hooks/useIsMobileView\";\nimport { useWallet } from \"../../hooks/useWallet\";\n\nimport styles from \"./Header.module.scss\";\nimport Button from \"../UI/Button/Button\";\nimport { truncAddress } from \"../../utils/utils\";\nimport { WALLET } from \"../../constants/wallets\";\n\nconst LINKS = [\n  { text: \"About\", path: \"/about\" },\n  { text: \"Mining\", path: \"/mining\" },\n];\n\nconst langs = [\n  { key: \"en\", label: \"English\" },\n  { key: \"zh\", label: \"简体中文\" },\n  { key: \"ar\", label: \"عربي\" }, // de: { label: \"Deutsch\", icon: \"de\" }, // el: { label: \"Eλληνικά\", icon: \"el\" },\n  { key: \"es\", label: \"Español\" }, // fi: { label: \"Suomi\", icon: \"fi\" },\n  { key: \"fr\", label: \"Français\" }, // zh_HANT: { label: '繁體中文' }, // ja: { label: \"日本語\", icon: \"ja\" }, // pt: { label: \"Português\", icon: \"pt\" }, // it: { label: \"Italiano\", icon: \"it\" }, // ro: { label: \"Română\", icon: \"ro\" }, // ko: { label: \"한국의\", icon: \"ko\" },\n  { key: \"ru\", label: \"Русский\" }, // bn: { label: \"বাংলা\", icon: \"bn\" }, // hr: { label: 'hrvatski' },\n  { key: \"hi\", label: \"हिन्दी\" }, // hu: { label: \"Magyar\", icon: \"hu\" }, // vi: { label: \"Tiếng Việt\", icon: \"vi\" },\n];\n\nconst Header = () => {\n  const isMobileView = useIsMobileView();\n  const [menuCollapsed, setMenuCollapsed] = useState(isMobileView || false);\n  const [currentLang, setCurrentLang] = useState(\"en\");\n  const { i18n, t } = useTranslation();\n  const { account, connect, disconnect } = useWallet();\n\n  useEffect(() => {\n    if (isMobileView) {\n      setMenuCollapsed(true);\n    } else {\n      setMenuCollapsed(false);\n    }\n  }, [isMobileView]);\n\n  useEffect(() => {\n    setCurrentLang(i18n.resolvedLanguage);\n  }, [i18n.resolvedLanguage]);\n\n  const toggleMenu = () => {\n    if (isMobileView) {\n      setMenuCollapsed(!menuCollapsed);\n    }\n  };\n\n  const langMenu = (\n    <Menu\n      items={langs}\n      onClick={(item) => {\n        i18n.changeLanguage(item.key);\n      }}\n      className={styles.menu}\n    />\n  );\n\n  return (\n    <div className={styles.Header}>\n      <div className={styles.iconWrap}>\n        <img src=\"/static/images/header/logo.png\" alt=\"logo\" />\n      </div>\n      {!menuCollapsed && (\n        <div className={styles.navWrap}>\n          {Object.values(LINKS).map((item) => (\n            <NavLink\n              key={`Link${item.text}`}\n              to={item.path}\n              onClick={toggleMenu}\n              className={(isActive) =>\n                classNames(styles.navLink, { [styles.active]: isActive })\n              }\n            >\n              {t(item.text)}\n            </NavLink>\n          ))}\n          {isMobileView && (\n            <Dropdown overlay={langMenu}>\n              <div\n                className={styles.mobileLangButton}\n                onClick={(e) => e.preventDefault()}\n              >\n                <img\n                  src={`/static/images/header/flags/${currentLang}.svg`}\n                  alt={currentLang}\n                />\n              </div>\n            </Dropdown>\n          )}\n          )\n        </div>\n      )}\n      <div className={styles.walletWrap}>\n        {!isMobileView && (\n          <Dropdown overlay={langMenu}>\n            <div\n              className={styles.langButton}\n              onClick={(e) => e.preventDefault()}\n            >\n              <img\n                src={`/static/images/header/flags/${currentLang}.svg`}\n                alt={currentLang}\n              />\n            </div>\n          </Dropdown>\n        )}\n        {!account && (\n          <img\n            src=\"/static/images/header/wallet.png\"\n            alt=\"wallet\"\n            onClick={() => {\n              connect(WALLET.METAMASK);\n            }}\n          />\n        )}\n        {account && (\n          <Button className={styles.walletButton} onClick={disconnect}>\n            {truncAddress(account)}\n          </Button>\n        )}\n        {isMobileView && (\n          <MenuOutlined className={styles.menuIcon} onClick={toggleMenu} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nHeader.propTypes = {};\n\nexport default Header;\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport styles from './MainContainer.module.scss';\n\nconst MainContainer = (props) => {\n  const { className, children } = props;\n  return <div className={classnames(styles.MainContainer, className)}>{children}</div>;\n};\n\nMainContainer.propTypes = { className: PropTypes.string, children: PropTypes.node };\n\nMainContainer.defaultProps = {\n  className: '',\n  children: null,\n};\n\nexport default MainContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport styles from \"./Card.module.scss\";\n\nconst Card = (props) => {\n  const { className, children } = props;\n  return <div className={classNames(styles.Card, className)}>{children}</div>;\n};\n\nCard.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n\nCard.defaultProps = {\n  className: \"\",\n  children: null,\n};\n\nexport default Card;\n","export const MULTICALL_ADDRESS = \"0xE1dDc30f691CA671518090931e3bFC1184BFa4Aa\";\n\nexport const MANAGER_ADDRESS = \"0x98250708f851820aF56f03D03ca5531598C08859\";\n\nexport const INVITATION_ADDRESS = \"0x40C7F6c6d452546E2ce098FbC4c9D1B60f2a6D2d\";\n\nexport const TH_ADDRESS = \"0x94E80FE038b6c5B2E24B459a2b944ce6426C1405\";\n\nexport const TOKENS = {\n  NATIVE: \"0x0000000000000000000000000000000000000000\",\n  ACCEPT: \"0x382bb369d343125bfb2117af9c149795c6c65c50\",\n};\n","import { useMemo } from \"react\";\nimport { ethers, Contract } from \"ethers\";\nimport { useWallet } from \"./useWallet\";\n\nimport MULTICALL_ABI from \"../abis/multicall.json\";\nimport MANAGER_ABI from \"../abis/manager.json\";\nimport INVITATION_ABI from \"../abis/invitationCenter.json\";\nimport IERC20_ABI from \"../abis/IERC20.json\";\nimport TH_ABI from \"../abis/treasureHunter.json\";\n\nimport {\n  MULTICALL_ADDRESS,\n  MANAGER_ADDRESS,\n  INVITATION_ADDRESS,\n  TH_ADDRESS,\n} from \"../constants/addresses\";\n\nexport const useMulticallContract = () => {\n  const { ethersProvider } = useWallet();\n  return useMemo(() => {\n    if (!ethersProvider) {\n      return null;\n    }\n    return new Contract(MULTICALL_ADDRESS, MULTICALL_ABI.abi, ethersProvider);\n  }, [ethersProvider]);\n};\n\nexport const useManagerContract = () => {\n  const { ethersProvider, account } = useWallet();\n  return useMemo(() => {\n    if (!ethersProvider) {\n      return null;\n    }\n    return account\n      ? new Contract(\n          MANAGER_ADDRESS,\n          MANAGER_ABI.abi,\n          ethersProvider.getSigner()\n        )\n      : new Contract(MANAGER_ADDRESS, MANAGER_ABI.abi, ethersProvider);\n  }, [account, ethersProvider]);\n};\n\nexport const useInvitationContract = () => {\n  const { ethersProvider, account } = useWallet();\n  return useMemo(() => {\n    if (!ethersProvider) {\n      return null;\n    }\n    return account\n      ? new Contract(\n          INVITATION_ADDRESS,\n          INVITATION_ABI.abi,\n          ethersProvider.getSigner()\n        )\n      : new Contract(INVITATION_ADDRESS, INVITATION_ABI.abi, ethersProvider);\n  }, [account, ethersProvider]);\n};\n\nexport const useTHContract = () => {\n  const { ethersProvider, account } = useWallet();\n  return useMemo(() => {\n    if (!ethersProvider) {\n      return null;\n    }\n    return account\n      ? new Contract(TH_ADDRESS, TH_ABI.abi, ethersProvider.getSigner())\n      : new Contract(TH_ADDRESS, TH_ABI.abi, ethersProvider);\n  }, [account, ethersProvider]);\n};\n\nexport const useERC20Contract = (address) => {\n  const { ethersProvider, account } = useWallet();\n  return useMemo(() => {\n    if (!(ethersProvider && ethers.utils.isAddress(address))) {\n      return null;\n    }\n    return account\n      ? new Contract(address, IERC20_ABI.abi, ethersProvider.getSigner())\n      : new Contract(address, IERC20_ABI.abi, ethersProvider);\n  }, [ethersProvider, address, account]);\n};\n","import { useRef, useEffect } from \"react\";\n\nexport function useIsMounted() {\n  const isMounted = useRef(false);\n\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  return isMounted;\n}\n","import { useEffect, useReducer } from \"react\";\nimport { ethers } from \"ethers\";\n\nimport { readContractReducer, FETCH_STATE } from \"../utils/utils\";\nimport { useInvitationContract } from \"./useContract\";\nimport { useIsMounted } from \"./useIsMounted\";\nimport { useWallet } from \"./useWallet\";\nimport { useUpdate } from \"./useUpdate\";\n\nconst decodeInviterRecord = (record) => ({\n  who: record.who,\n  inviter: record.inviter,\n  // padding with 28 zero bytes\n  invitationCode: ethers.utils.parseBytes32String(record.invitationCode),\n  // first, second, ..... layer of invitee count\n  inviteeAmounts: record.inviteeAmounts.map((item) => item.toNumber()),\n});\n\nexport const useDefaultInviterCode = () => {\n  const [state, dispatch] = useReducer(readContractReducer, {\n    isLoading: false,\n    isError: false,\n    data: null,\n  });\n  const invitationContract = useInvitationContract();\n  const isMounted = useIsMounted();\n  const { updateByTimer } = useUpdate();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (!invitationContract) {\n          return;\n        }\n        dispatch({ type: FETCH_STATE.INIT });\n        const data = await invitationContract.defaultInviterCode();\n        if (isMounted.current) {\n          dispatch({\n            type: FETCH_STATE.SUCCESS,\n            payload: ethers.utils.parseBytes32String(data),\n          });\n        }\n      } catch (err) {\n        console.error(err);\n        if (isMounted.current) {\n          dispatch({ type: FETCH_STATE.FAILURE });\n        }\n      }\n    };\n    fetchData();\n  }, [invitationContract, isMounted, updateByTimer]);\n\n  return state;\n};\n\nexport const useRegisteredAccountLength = () => {\n  const [state, dispatch] = useReducer(readContractReducer, {\n    isLoading: false,\n    isError: false,\n    data: null,\n  });\n  const invitationContract = useInvitationContract();\n  const isMounted = useIsMounted();\n  const { updateByTimer } = useUpdate();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (!invitationContract) {\n          return;\n        }\n        dispatch({ type: FETCH_STATE.INIT });\n        const data = await invitationContract.registeredAccountLength();\n        if (isMounted.current) {\n          dispatch({ type: FETCH_STATE.SUCCESS, payload: data.toNumber() });\n        }\n      } catch (err) {\n        console.error(err);\n        if (isMounted.current) {\n          dispatch({ type: FETCH_STATE.FAILURE });\n        }\n      }\n    };\n    fetchData();\n  }, [invitationContract, isMounted, updateByTimer]);\n\n  return state;\n};\n\nexport const useIsRegistered = (address) => {\n  const [state, dispatch] = useReducer(readContractReducer, {\n    isLoading: false,\n    isError: false,\n    data: null,\n  });\n  const invitationContract = useInvitationContract();\n  const isMounted = useIsMounted();\n  const { account } = useWallet();\n  const { updateByTimer } = useUpdate();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (\n          !(\n            invitationContract &&\n            ((address && ethers.utils.isAddress(address)) || account)\n          )\n        ) {\n          return;\n        }\n        dispatch({ type: FETCH_STATE.INIT });\n        const data = await invitationContract.isRegistered(address || account);\n        if (isMounted.current) {\n          dispatch({ type: FETCH_STATE.SUCCESS, payload: data });\n        }\n      } catch (err) {\n        console.error(err);\n        if (isMounted.current) {\n          dispatch({ type: FETCH_STATE.FAILURE });\n        }\n      }\n    };\n    fetchData();\n  }, [invitationContract, isMounted, account, address, updateByTimer]);\n\n  return state;\n};\n\nexport const useInviterRecords = (address) => {\n  const [state, dispatch] = useReducer(readContractReducer, {\n    isLoading: false,\n    isError: false,\n    data: null,\n  });\n  const invitationContract = useInvitationContract();\n  const isMounted = useIsMounted();\n  const { account } = useWallet();\n  const { updateByTimer } = useUpdate();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (\n          !(\n            invitationContract &&\n            ((address && ethers.utils.isAddress(address)) || account)\n          )\n        ) {\n          return;\n        }\n        dispatch({ type: FETCH_STATE.INIT });\n        const data = await invitationContract.inviterRecords(\n          address || account\n        );\n        if (isMounted.current) {\n          dispatch({\n            type: FETCH_STATE.SUCCESS,\n            payload: decodeInviterRecord(data),\n          });\n        }\n      } catch (err) {\n        console.error(err);\n        if (isMounted.current) {\n          dispatch({ type: FETCH_STATE.FAILURE });\n        }\n      }\n    };\n    fetchData();\n  }, [invitationContract, isMounted, account, address, updateByTimer]);\n\n  return state;\n};\n\nexport const useRegisteredInvitationCodeContains = () => {\n  const invitationContract = useInvitationContract();\n  const isValidInvitation = async (code) => {\n    if (!code) {\n      return false;\n    }\n    try {\n      const result = await invitationContract.registeredInvitationCodeContains(\n        ethers.utils.formatBytes32String(code)\n      );\n      return result;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  };\n\n  return { isValidInvitation };\n};\n","import React from \"react\";\nimport { message } from \"antd\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport { truncAddress } from \"../../utils/utils\";\nimport MainContainer from \"../../components/UI/MainContainer/MainContainer\";\nimport Card from \"../../components/UI/Card/Card\";\nimport Button from \"../../components/UI/Button/Button\";\n\nimport styles from \"./About.module.scss\";\nimport commonStyles from \"../../common.module.scss\";\nimport {\n  useDefaultInviterCode,\n  useInviterRecords,\n  useIsRegistered,\n  useRegisteredAccountLength,\n} from \"../../hooks/useInvitation\";\nimport { useWallet } from \"../../hooks/useWallet\";\n\nconst REFERRAL_LIST = [\n  {\n    rank: 1,\n    address: \"0x0000000000000000000000000000000000000000\",\n    reward: 0,\n  },\n  {\n    rank: 2,\n    address: \"0x0000000000000000000000000000000000000000\",\n    reward: 0,\n  },\n  {\n    rank: 3,\n    address: \"0x0000000000000000000000000000000000000000\",\n    reward: 0,\n  },\n  {\n    rank: 4,\n    address: \"0x0000000000000000000000000000000000000000\",\n    reward: 0,\n  },\n  {\n    rank: 5,\n    address: \"0x0000000000000000000000000000000000000000\",\n    reward: 0,\n  },\n  {\n    rank: 6,\n    address: \"0x0000000000000000000000000000000000000000\",\n    reward: 0,\n  },\n  {\n    rank: 7,\n    address: \"0x0000000000000000000000000000000000000000\",\n    reward: 0,\n  },\n  {\n    rank: 8,\n    address: \"0x0000000000000000000000000000000000000000\",\n    reward: 0,\n  },\n  {\n    rank: 9,\n    address: \"0x0000000000000000000000000000000000000000\",\n    reward: 0,\n  },\n  {\n    rank: 10,\n    address: \"0x0000000000000000000000000000000000000000\",\n    reward: 0,\n  },\n];\n\nconst About = () => {\n  const amountOfInvitee = 100;\n  const { t } = useTranslation();\n  const { account } = useWallet();\n  // const { data: defaultInviterCode } = useDefaultInviterCode();\n  // const { data: registeredAccountLength } = useRegisteredAccountLength();\n  // const { data: isRegistered } = useIsRegistered(account);\n  // const { data: inviterRecord } = useInviterRecords(account);\n  // console.log(\n  //   defaultInviterCode,\n  //   registeredAccountLength,\n  //   isRegistered,\n  //   inviterRecord\n  // );\n  return (\n    <div\n      className={styles.About}\n      style={{ backgroundImage: \"url(/static/images/about/bg.png)\" }}\n    >\n      <div className={styles.themeImageWrap}>\n        <img src=\"/static/images/about/themeImg.png\" alt=\"theme\" />\n      </div>\n      <MainContainer className={styles.mainContent}>\n        <div className={styles.introWrap}>\n          <div className={styles.text}>\n            <h2 className={commonStyles.gradientTitle}>\n              {t(\"what-is-treasure-hunter\")}\n            </h2>\n            <p className={commonStyles.mainText}>\n              <Trans i18nKey=\"treasure-hunter-explanation-1\">\n                The Treasure Hunter is dedicated to helping users choose the\n                best GamefFi projects for Mining in the bear market. Our analyst\n                team consists of multiple senior GameFi players, who sift\n                through countless projects to find the most profitable yet\n                stable ones on the Ethereum and Binance Smart Chain. The\n                selected projects are then mined mainly through scripts except\n                for super projects which are manually mined by players in our\n                studio.\n              </Trans>\n            </p>\n            <p className={commonStyles.mainText}>\n              <Trans i18nKey=\"treasure-hunter-explanation-2\">\n                Unlike other data analysis projects on the market, we believe\n                that sharing information about projects and mining strategies\n                does not solve the main problem of users nowadays. What most\n                users lack are the time, experience, and capital to participate\n                in highly demanding projects. It is costly for an individual\n                user to find credible information sources and keep track of all\n                the changing conditions. This is where Treasure Hunter comes\n                into play.\n              </Trans>\n            </p>\n          </div>\n          <img src=\"/static/images/about/robot.png\" alt=\"robot\" />\n        </div>\n        <Card className={styles.featureWrap}>\n          <div className={styles.text}>\n            <h2 className={commonStyles.gradientTitle}>{t(\"Highlights\")}</h2>\n            <ul>\n              <li className={commonStyles.mainText}>{t(\"gradient-1\")}</li>\n              <li className={commonStyles.mainText}>{t(\"gradient-2\")}</li>\n              <li className={commonStyles.mainText}>{t(\"gradient-3\")}</li>\n            </ul>\n          </div>\n          <img src=\"/static/images/about/factory.png\" alt=\"factory\" />\n        </Card>\n        <div className={styles.supportWrap}>\n          <div className={styles.text}>\n            <h2\n              style={{ alignSelf: \"start\" }}\n              className={commonStyles.gradientTitle}\n            >\n              {t(\"we-support\")}\n            </h2>\n            <p className={commonStyles.mainText}>\n              <Trans i18nKey=\"games-intro\">\n                These are some of the major games we are currently focusing on.\n                More games are coming soon.\n              </Trans>\n            </p>\n          </div>\n          <img\n            className={styles.imageWrap}\n            src=\"/static/images/about/supportGames.png\"\n            alt=\"games\"\n          />\n          {/* <List\n            className={styles.supportList}\n            grid={{\n              gutter: 32,\n              xs: 2,\n              sm: 4,\n              md: 4,\n              lg: 6,\n              xl: 6,\n              xxl: 6,\n            }}\n            dataSource={SUPPORT_LIST}\n            renderItem={(item) => (\n              <List.Item>\n                <img\n                  className={styles.supportListItem}\n                  src=\"/static/images/about/supportPlaceholder.png\"\n                  alt=\"support\"\n                />\n              </List.Item>\n            )}\n          /> */}\n        </div>\n\n        <div className={styles.referralWrap}>\n          <div className={styles.titleWrap}>\n            <div className={styles.title}>\n              <h2>{t(\"Referral\")}</h2>\n              <p>{`${t(\"amount-of-invitee\")} ${amountOfInvitee}`}</p>\n            </div>\n            <div className={styles.referralLinkWrap}>\n              <div className={styles.referralLink}>\n                https://treasurehunter.pro\n              </div>\n\n              <CopyToClipboard\n                text=\"https://treasurehunter.pro\"\n                onCopy={() => {\n                  message.success(t(\"referral-link-copied\"));\n                }}\n              >\n                <Button className={styles.button}>{t(\"Copy\")}</Button>\n              </CopyToClipboard>\n            </div>\n          </div>\n          <div className={styles.referralList}>\n            {REFERRAL_LIST.map((item) => (\n              <div className={styles.referralListItem} key={`rank${item.rank}`}>\n                <div>\n                  <p className={styles.ordinal}>{item.rank}</p>\n                  <p className={styles.address}>{truncAddress(item.address)}</p>\n                </div>\n                <div className={styles.reward}>{item.reward}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </MainContainer>\n    </div>\n  );\n};\n\nAbout.propTypes = {};\n\nexport default About;\n","import { ethers } from \"ethers\";\nimport { useEffect, useReducer } from \"react\";\nimport { FETCH_STATE, readContractReducer } from \"../utils/utils\";\nimport { useERC20Contract } from \"./useContract\";\nimport { useIsMounted } from \"./useIsMounted\";\nimport { useUpdate } from \"./useUpdate\";\nimport { useWallet } from \"./useWallet\";\n\nexport const useTokenBalance = (tokenAddress, accountAddress = null) => {\n  const [state, dispatch] = useReducer(readContractReducer, {\n    isLoading: false,\n    isError: false,\n    data: null,\n  });\n  const tokenContract = useERC20Contract(tokenAddress);\n  const { account, ethersProvider } = useWallet();\n  const isMounted = useIsMounted();\n  const { updateByTimer } = useUpdate();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const { utils } = ethers;\n\n      try {\n        if (\n          !(\n            ethersProvider &&\n            tokenContract &&\n            (ethers.utils.isAddress(accountAddress) || account)\n          )\n        ) {\n          return;\n        }\n        dispatch({ type: FETCH_STATE.INIT });\n        let data;\n        if (parseInt(tokenAddress, 16) === 0) {\n          data = await ethersProvider.getBalance(accountAddress || account);\n        } else {\n          data = await tokenContract.balanceOf(accountAddress || account);\n        }\n        if (isMounted.current) {\n          dispatch({\n            type: FETCH_STATE.SUCCESS,\n            payload: Number(utils.formatEther(data)),\n          });\n        }\n      } catch (error) {\n        console.error(error);\n        if (isMounted.current) {\n          dispatch({ type: FETCH_STATE.FAILURE });\n        }\n      }\n    };\n    fetchData();\n  }, [\n    tokenContract,\n    account,\n    accountAddress,\n    ethersProvider,\n    isMounted,\n    updateByTimer,\n    tokenAddress,\n  ]);\n  return state;\n};\n\nexport const useTokenAllowance = (\n  tokenAddress,\n  targetContractAddress,\n  accountAddress = null\n) => {\n  const [state, dispatch] = useReducer(readContractReducer, {\n    isLoading: false,\n    isError: false,\n    data: null,\n  });\n  const tokenContract = useERC20Contract(tokenAddress);\n  const { account, ethersProvider } = useWallet();\n  const isMounted = useIsMounted();\n  const { updateByTimer } = useUpdate();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const { utils } = ethers;\n\n      try {\n        if (\n          !(\n            targetContractAddress &&\n            ethersProvider &&\n            tokenContract &&\n            (ethers.utils.isAddress(accountAddress) || account)\n          )\n        ) {\n          return;\n        }\n        dispatch({ type: FETCH_STATE.INIT });\n        const data = await tokenContract.allowance(\n          accountAddress || account,\n          targetContractAddress\n        );\n        if (isMounted.current) {\n          dispatch({\n            type: FETCH_STATE.SUCCESS,\n            payload: Number(utils.formatEther(data)),\n          });\n        }\n      } catch (error) {\n        console.error(error);\n        if (isMounted.current) {\n          dispatch({ type: FETCH_STATE.FAILURE });\n        }\n      }\n    };\n    fetchData();\n  }, [\n    tokenContract,\n    account,\n    accountAddress,\n    ethersProvider,\n    isMounted,\n    updateByTimer,\n    targetContractAddress,\n  ]);\n  return state;\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { List, message } from \"antd\";\nimport Button from \"../../UI/Button/Button\";\nimport { DURATIONS, NFTS, NFT_PATTERNS, toPattern } from \"../../../utils/utils\";\nimport {\n  useDefaultInviterCode,\n  useIsRegistered,\n  useRegisteredInvitationCodeContains,\n} from \"../../../hooks/useInvitation\";\nimport { useQuery } from \"../../../hooks/useQuery\";\nimport { useBuy } from \"../../../hooks/useManager\";\nimport { useWallet } from \"../../../hooks/useWallet\";\nimport { TOKENS } from \"../../../constants/addresses\";\nimport { useTokenBalance } from \"../../../hooks/useToken\";\n\nimport styles from \"./MiningNFTAction.module.scss\";\nimport commonStyles from \"../../../common.module.scss\";\n\n// const NFTS = [{ id: 1 }, { id: 2 }, { id: 3 }, { id: 4 }];\n\n// const DURATIONS = [\n//   { duration: 1, unit: MONTH, unitText: \"Month\" },\n//   { duration: 3, unit: MONTH, unitText: \"Months\" },\n//   { duration: 6, unit: MONTH, unitText: \"Months\" },\n//   { duration: 1, unit: YEAR, unitText: \"Year\" },\n// ];\n\nconst MiningNFTAction = (props) => {\n  const { className } = props;\n  const { t } = useTranslation();\n  const [params, setParams] = useState({ value: null, duration: null });\n  const { data: defaultInviterCode } = useDefaultInviterCode();\n  const { data: isRegistered } = useIsRegistered();\n  const { state: buyState, buy } = useBuy();\n  const { account } = useWallet();\n  const { isValidInvitation } = useRegisteredInvitationCodeContains();\n  const queryInviterCode = useQuery()?.get(\"referral\");\n  const { data: nativeBalance } = useTokenBalance(TOKENS.NATIVE);\n  const { data: acceptBalance } = useTokenBalance(TOKENS.ACCEPT);\n\n  const setValue = (value) => {\n    setParams((prev) => ({ ...prev, value }));\n  };\n\n  const setDuration = (duration) => {\n    setParams((prev) => ({ ...prev, duration }));\n  };\n\n  const buyHelper = () => {\n    if (buyState?.isLoading) {\n      return;\n    }\n    if (!account) {\n      message.info(\"Please connect to wallet\");\n      return;\n    }\n    // not ready\n    if (!(defaultInviterCode && isRegistered !== null)) {\n      return;\n    }\n    // check params\n    if (!params.value) {\n      message.info(\"Please select an NFT\");\n      return;\n    }\n    if (!params.duration) {\n      message.info(\"Please select a duration\");\n      return;\n    }\n    // get pattern\n    const pattern = toPattern(params.value, params.duration);\n    if (pattern === NFT_PATTERNS.PATTERN_UNKNOWN.PATTERN) {\n      return;\n    }\n    // check for gas\n    if (nativeBalance < 0.01) {\n      message.info(\"Need gas\");\n      return;\n    }\n    // check for accept token balance\n    if (acceptBalance < params.value) {\n      message.info(`Your USDT balance < ${params.value}`);\n      return;\n    }\n    // handle invitation code\n    // let invitationCode = defaultInviterCode;\n    // if (isRegistered) {\n    //   invitationCode = '';\n    // } else if (queryInviterCode) {\n    //   // handle invitationCode from query param\n    //   if (!(await isValidInvitation(queryInviterCode))) {\n    //     message.info('Invalid referral code');\n    //     return;\n    //   }\n    //   invitationCode = queryInviterCode;\n    // }\n\n    console.log(\"buy\");\n  };\n\n  return (\n    <div className={classNames(styles.MiningNFTAction, className)}>\n      <h2 className={commonStyles.gradientTitle}>{t(\"pick-a-nft-to-start\")}</h2>\n      <div className={styles.nftSelectorWrap}>\n        <p className={classNames(commonStyles.mainText, styles.subtitle)}>\n          {t(\"type-of-nfts\")}\n        </p>\n        <List\n          className={styles.selectorList}\n          grid={{\n            gutter: 16,\n            xs: 4,\n            sm: 4,\n            md: 4,\n            lg: 4,\n            xl: 4,\n            xxl: 4,\n          }}\n          dataSource={Object.values(NFTS)}\n          renderItem={(item) => (\n            <List.Item\n              onClick={() => {\n                setValue(item.value);\n              }}\n            >\n              <div className={commonStyles.square}>\n                <div\n                  className={classNames(styles.nftSelectorListItem, {\n                    [styles.active]: params.value === item.value,\n                  })}\n                >\n                  <img\n                    src={`/static/images/nfts/${item.id}.png`}\n                    alt=\"support\"\n                  />\n                </div>\n              </div>\n              <p className={styles.nftPrice}>{item.value} USDT</p>\n            </List.Item>\n          )}\n        />\n      </div>\n      <div className={styles.durationSelectorWrap}>\n        <p className={classNames(commonStyles.mainText, styles.subtitle)}>\n          {t(\"mining-duration\")}\n        </p>\n        <List\n          className={styles.selectorList}\n          grid={{\n            gutter: 16,\n            xs: 4,\n            sm: 4,\n            md: 4,\n            lg: 4,\n            xl: 4,\n            xxl: 4,\n          }}\n          dataSource={DURATIONS}\n          renderItem={(item) => (\n            <List.Item\n              onClick={() => {\n                setDuration(item.duration);\n              }}\n            >\n              <div\n                className={classNames(styles.durationSelectorListItem, {\n                  [styles.active]: params.duration === item.duration,\n                })}\n              >\n                {item.duration} {t(item.unitText)}\n              </div>\n            </List.Item>\n          )}\n        />\n      </div>\n      <Button gradient onClick={buyHelper}>\n        {t(\"start-mining\")}\n      </Button>\n    </div>\n  );\n};\n\nMiningNFTAction.propTypes = { className: PropTypes.string };\nMiningNFTAction.defaultProps = { className: \"\" };\n\nexport default MiningNFTAction;\n","import { useEffect, useReducer } from \"react\";\nimport { ethers } from \"ethers\";\n\nimport {\n  readContractReducer,\n  FETCH_STATE,\n  fromPattern,\n  ACCEPT_TOKEN_CONVERSION_RATIO,\n} from \"../utils/utils\";\nimport { useManagerContract } from \"./useContract\";\nimport { useIsMounted } from \"./useIsMounted\";\nimport { useWallet } from \"./useWallet\";\nimport { useUpdate } from \"./useUpdate\";\n\nconst decodeRecord = (record) => ({\n  bonusAmount: ethers.utils.formatEther(record.bonusAmount),\n});\n\nexport const useRecord = (address) => {\n  const [state, dispatch] = useReducer(readContractReducer, {\n    isLoading: false,\n    isError: false,\n    data: null,\n  });\n  const managerContract = useManagerContract();\n  const isMounted = useIsMounted();\n  const { account } = useWallet();\n  const { updateByTimer } = useUpdate();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (\n          !(\n            managerContract &&\n            ((address && ethers.utils.isAddress(address)) || account)\n          )\n        ) {\n          return;\n        }\n        dispatch({ type: FETCH_STATE.INIT });\n        const data = await managerContract.records(address || account);\n        if (isMounted.current) {\n          dispatch({ type: FETCH_STATE.SUCCESS, payload: decodeRecord(data) });\n        }\n      } catch (err) {\n        console.error(err);\n        if (isMounted.current) {\n          dispatch({ type: FETCH_STATE.FAILURE });\n        }\n      }\n    };\n    fetchData();\n  }, [managerContract, isMounted, account, address, updateByTimer]);\n\n  return state;\n};\n\nexport const useBuy = () => {\n  const [state, dispatch] = useReducer(readContractReducer, {\n    isLoading: false,\n    isError: false,\n    data: null,\n  });\n  const managerContract = useManagerContract();\n  const isMounted = useIsMounted();\n\n  const buy = async (patterns, inviterCode) => {\n    try {\n      const { utils } = ethers;\n      if (!(managerContract && patterns?.length)) {\n        return;\n      }\n      const totalValue =\n        patterns.reduce((accum, item) => {\n          const { value } = fromPattern(item);\n          return accum + value;\n        }, 0) * ACCEPT_TOKEN_CONVERSION_RATIO;\n      dispatch({ type: FETCH_STATE.INIT });\n      const tx = await managerContract.buy(\n        patterns,\n        utils.formatBytes32String(inviterCode),\n        {\n          value: utils.parseEther(totalValue.toString()),\n        }\n      );\n      console.log(\"tx\", tx);\n      const receipt = await tx.wait();\n      console.log(\"receipt\", receipt);\n      if (isMounted.current) {\n        dispatch({ type: FETCH_STATE.SUCCESS, payload: null });\n      }\n    } catch (error) {\n      console.log(error);\n      if (isMounted.current) {\n        dispatch({ type: FETCH_STATE.FAILURE });\n      }\n    }\n  };\n\n  return { state, buy };\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { truncAddress } from \"../../../utils/utils\";\n\nimport styles from \"./MiningLeaderboard.module.scss\";\nimport commonStyles from \"../../../common.module.scss\";\n\nconst RANK = [\n  {\n    rank: 1,\n    address: \"0x0000000000000000000000000000000000000000\",\n    reward: 0,\n  },\n  {\n    rank: 2,\n    address: \"0x0000000000000000000000000000000000000000\",\n    reward: 0,\n  },\n  {\n    rank: 3,\n    address: \"0x0000000000000000000000000000000000000000\",\n    reward: 0,\n  },\n  {\n    rank: 4,\n    address: \"0x0000000000000000000000000000000000000000\",\n    reward: 0,\n  },\n  {\n    rank: 5,\n    address: \"0x0000000000000000000000000000000000000000\",\n    reward: 0,\n  },\n  {\n    rank: 6,\n    address: \"0x0000000000000000000000000000000000000000\",\n    reward: 0,\n  },\n  {\n    rank: 7,\n    address: \"0x0000000000000000000000000000000000000000\",\n    reward: 0,\n  },\n  {\n    rank: 8,\n    address: \"0x0000000000000000000000000000000000000000\",\n    reward: 0,\n  },\n  {\n    rank: 9,\n    address: \"0x0000000000000000000000000000000000000000\",\n    reward: 0,\n  },\n  {\n    rank: 10,\n    address: \"0x0000000000000000000000000000000000000000\",\n    reward: 0,\n  },\n];\n\nconst MiningLeaderboard = (props) => {\n  const { className } = props;\n  const { t } = useTranslation();\n\n  return (\n    <div className={classNames(styles.MiningLeaderboard, className)}>\n      <div className={styles.titleWrap}>\n        <img src='/static/images/mining/trophy.png' alt='trophy' />\n        <h2 className={commonStyles.gradientTitle}>Top 10</h2>\n      </div>\n      <div className={styles.listWrap}>\n        <div className={styles.listTitle}>\n          <p>{t(\"Rank\")}</p>\n          <p>{t(\"Rewards\")}</p>\n        </div>\n        <div className={styles.list}>\n          {RANK.map((item) => (\n            <div className={styles.listItem} key={`rank${item.rank}`}>\n              <div>\n                <p className={styles.ordinal}>{item.rank}</p>\n                <p className={styles.address}>{truncAddress(item.address)}</p>\n              </div>\n              <div className={styles.reward}>{item.reward}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMiningLeaderboard.propTypes = { className: PropTypes.string };\nMiningLeaderboard.defaultProps = { className: \"\" };\n\nexport default MiningLeaderboard;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './Countdown.module.scss';\n\nconst Countdown = (props) => {\n  const [timeLeft, setTimeLeft] = useState({\n    sec: 0,\n    min: 0,\n    hour: 0,\n    day: 0,\n  });\n  const { timestamp, className } = props;\n\n  function calculateTimeLeft(endTS) {\n    let diff = (+new Date(endTS) - +new Date()) / 1000;\n    // clear countdown when date is reached\n    if (diff <= 0) return false;\n\n    const timeLeftLocal = {\n      year: 0,\n      day: 0,\n      hour: 0,\n      min: 0,\n      sec: 0,\n    };\n\n    // calculate time difference between now and expected date\n    if (diff >= 365.25 * 86400) {\n      // 365.25 * 24 * 60 * 60\n      timeLeftLocal.year = Math.floor(diff / (365.25 * 86400));\n      diff -= timeLeftLocal.year * 365.25 * 86400;\n    }\n    if (diff >= 86400) {\n      // 24 * 60 * 60\n      timeLeftLocal.day = Math.floor(diff / 86400);\n      diff -= timeLeftLocal.day * 86400;\n    }\n    if (diff >= 3600) {\n      // 60 * 60\n      timeLeftLocal.hour = Math.floor(diff / 3600);\n      diff -= timeLeftLocal.hour * 3600;\n    }\n    if (diff >= 60) {\n      timeLeftLocal.min = Math.floor(diff / 60);\n      diff -= timeLeftLocal.min * 60;\n    }\n    timeLeftLocal.sec = Math.floor(diff);\n\n    return timeLeftLocal;\n  }\n\n  function addLeadingZeros(val) {\n    let value = val;\n    value = String(value);\n    while (value.length < 2) {\n      value = `0${value}`;\n    }\n    return value;\n  }\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setTimeLeft(calculateTimeLeft(timestamp));\n    }, 1000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [timestamp, timeLeft]);\n\n  return (\n    <span className={classnames(styles.Countdown, className)}>\n      {parseInt(timeLeft.day, 10) > 0 ? (\n        <>\n          <span className={styles.countdownCol}>{addLeadingZeros(timeLeft.day)}</span>\n          <span className={styles.colon}>:</span>\n        </>\n      ) : null}\n      <span className={styles.countdownCol}>{addLeadingZeros(timeLeft.hour)}</span>\n      <span className={styles.colon}>:</span>\n      <span className={styles.countdownCol}>{addLeadingZeros(timeLeft.min)}</span>\n      <span className={styles.colon}>:</span>\n      <span className={styles.countdownCol}>{addLeadingZeros(timeLeft.sec)}</span>\n    </span>\n  );\n};\n\nCountdown.propTypes = {\n  timestamp: PropTypes.number,\n  className: PropTypes.string,\n};\n\nCountdown.defaultProps = {\n  timestamp: new Date().getTime(),\n  className: '',\n};\n\nexport default Countdown;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { useTranslation } from \"react-i18next\";\n\nimport Button from \"../../UI/Button/Button\";\nimport Countdown from \"../../Countdown/Countdown\";\n\nimport styles from \"./MiningProfileListItem.module.scss\";\nimport commonStyles from \"../../../common.module.scss\";\n\nconst MiningProfileListItem = (props) => {\n  const { redeemHandler, claimHandler, record } = props;\n  const { t } = useTranslation();\n\n  return (\n    <div className={styles.MiningProfileListItem}>\n      <img src={`/static/images/nfts/${record.img}.png`} alt='' />\n      <div className={styles.contentWrap}>\n        <div className={styles.durationTag}>\n          <h2 className={commonStyles.gradientTitle}>\n            {record.duration} {t(record.unitText)}\n          </h2>\n        </div>\n        <div className={styles.valueWrap}>\n          <div className={styles.valueItem}>\n            <p className={classNames(styles.title, commonStyles.mainText)}>\n              {t(\"time-left\")}\n            </p>\n            <Countdown\n              timestamp={record.endTime * 1000}\n              className={styles.value}\n            />\n          </div>\n          <div className={styles.valueItem}>\n            <p className={classNames(styles.title, commonStyles.mainText)}>\n              {t(\"Claimable\")}\n            </p>\n            <p className={styles.value}>{record.claimable}</p>\n          </div>\n        </div>\n        <div className={styles.buttonWrap}>\n          <Button onClick={redeemHandler} className={styles.button} secondary>\n            {t(\"Redeem\")}\n          </Button>\n          <Button onClick={claimHandler} className={styles.button} gradient>\n            {t(\"Claim\")}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\nMiningProfileListItem.propTypes = {\n  redeemHandler: PropTypes.func,\n  claimHandler: PropTypes.func,\n  record: PropTypes.objectOf(PropTypes.any),\n};\n\nMiningProfileListItem.defaultProps = {\n  redeemHandler: () => {},\n  claimHandler: () => {},\n  record: {},\n};\n\nexport default MiningProfileListItem;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { List } from \"antd\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { MONTH, YEAR } from \"../../../utils/utils\";\nimport MiningProfileListItem from \"../MiningProfileListItem/MiningProfileListItem\";\n\nimport styles from \"./MiningProfile.module.scss\";\nimport commonStyles from \"../../../common.module.scss\";\n\nconst MINING_LIST = [\n  {\n    img: 1,\n    duration: 1,\n    unit: MONTH,\n    unitText: \"Month\",\n    endTime: 1660734884,\n    claimable: 0,\n  },\n  {\n    img: 2,\n    duration: 3,\n    unit: MONTH,\n    unitText: \"Months\",\n    endTime: 1666005284,\n    claimable: 1000,\n  },\n  {\n    img: 3,\n    duration: 6,\n    unit: MONTH,\n    unitText: \"Months\",\n    endTime: 1671279284,\n    claimable: 3000,\n  },\n  {\n    img: 4,\n    duration: 1,\n    unit: YEAR,\n    unitText: \"Year\",\n    endTime: 1689592692,\n    claimable: 50000,\n  },\n];\n\nconst MiningProfile = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div className={styles.MiningProfile}>\n      <div className={styles.header}>\n        <h2 className={commonStyles.gradientTitle}>{t(\"my-mining\")}</h2>\n      </div>\n      <div className={styles.stats}>\n        <div className={styles.statsItem}>\n          <h2 className={classNames(commonStyles.mainText)}>\n            {t(\"my-balance\")}\n          </h2>\n          <p>\n            1231231<span className={commonStyles.mainText}>USDT</span>\n          </p>\n        </div>\n        <div className={styles.statsItem}>\n          <h2 className={classNames(commonStyles.mainText)}>\n            {t(\"total-rewards\")}\n          </h2>\n          <p>+1231231</p>\n        </div>\n        <div className={styles.statsItem}>\n          <h2 className={classNames(commonStyles.mainText)}>\n            {t(\"my-plan-amount\")}\n          </h2>\n          <p>2</p>\n        </div>\n      </div>\n      <hr />\n      <div className={styles.miningList}>\n        {/* {MINING_LIST.map((item) => (\n          <MiningProfileListItem record={item} key={}/>\n        ))} */}\n        <List\n          grid={{\n            gutter: 32,\n            xs: 1,\n            sm: 1,\n            md: 2,\n            lg: 2,\n            xl: 2,\n            xxl: 2,\n          }}\n          dataSource={MINING_LIST}\n          renderItem={(item) => (\n            <List.Item>\n              <MiningProfileListItem record={item} />\n            </List.Item>\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n\nMiningProfile.propTypes = {};\n\nexport default MiningProfile;\n","import React from \"react\";\n\nimport styles from \"./Mining.module.scss\";\nimport MiningNFTAction from \"../../components/Mining/MiningNFTAction/MiningNFTAction\";\nimport MainContainer from \"../../components/UI/MainContainer/MainContainer\";\nimport MiningLeaderboard from \"../../components/Mining/MiningLeaderboard/MiningLeaderboard\";\nimport MiningProfile from \"../../components/Mining/MiningProfile/MiningProfile\";\n\nconst Mining = () => {\n  const foo = 1;\n  return (\n    <MainContainer className={styles.Mining}>\n      <div className={styles.section1}>\n        <MiningNFTAction />\n        <MiningLeaderboard />\n      </div>\n      <MiningProfile />\n    </MainContainer>\n  );\n};\n\nMining.propTypes = {};\n\nexport default Mining;\n","import { Redirect, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/Header/Header\";\n\nimport \"./App.css\";\nimport \"antd/dist/antd.css\";\nimport About from \"./views/About/About\";\nimport Mining from \"./views/Mining/Mining\";\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Header />\n      <Switch>\n        <Route path='/about' exact>\n          <About />\n        </Route>\n        <Route path='/mining' exact>\n          <Mining />\n        </Route>\n        <Redirect to='/about' />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./i18n\";\n\nimport { HashRouter } from \"react-router-dom\";\nimport { ProvideWallet } from \"./hooks/useWallet\";\nimport { ProvideUpdate } from \"./hooks/useUpdate\";\nimport { ProvideQuery } from \"./hooks/useQuery\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <HashRouter>\n      <ProvideQuery>\n        <ProvideWallet>\n          <ProvideUpdate>\n            <App />\n          </ProvideUpdate>\n        </ProvideWallet>\n      </ProvideQuery>\n    </HashRouter>\n  </React.StrictMode>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"About\":\"About_About__2nzyr\",\"themeImageWrap\":\"About_themeImageWrap__ZdplX\",\"mainContent\":\"About_mainContent__2u_yk\",\"introWrap\":\"About_introWrap__RGRoR\",\"featureWrap\":\"About_featureWrap__2t5zo\",\"supportWrap\":\"About_supportWrap__xzgJ8\",\"text\":\"About_text__3qkCL\",\"imageWrap\":\"About_imageWrap__1MK8M\",\"referralWrap\":\"About_referralWrap__31hyc\",\"titleWrap\":\"About_titleWrap__PoKJR\",\"title\":\"About_title__1lP3s\",\"referralLinkWrap\":\"About_referralLinkWrap__3_wGr\",\"referralLink\":\"About_referralLink__BNuu9\",\"referralList\":\"About_referralList__2CwBu\",\"referralListItem\":\"About_referralListItem__3Qt5Z\",\"ordinal\":\"About_ordinal__3IgwO\",\"address\":\"About_address__2o3z6\",\"reward\":\"About_reward__11-aX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MiningProfileListItem\":\"MiningProfileListItem_MiningProfileListItem__akQL8\",\"contentWrap\":\"MiningProfileListItem_contentWrap__3cuua\",\"durationTag\":\"MiningProfileListItem_durationTag__1k4nx\",\"valueWrap\":\"MiningProfileListItem_valueWrap__21AJ5\",\"valueItem\":\"MiningProfileListItem_valueItem__3CLFL\",\"title\":\"MiningProfileListItem_title__3rPxk\",\"value\":\"MiningProfileListItem_value__2Q1mH\",\"buttonWrap\":\"MiningProfileListItem_buttonWrap__21bTJ\",\"button\":\"MiningProfileListItem_button__1rZEd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MiningNFTAction\":\"MiningNFTAction_MiningNFTAction__2Y0Ej\",\"nftSelectorWrap\":\"MiningNFTAction_nftSelectorWrap__18Ps8\",\"durationSelectorWrap\":\"MiningNFTAction_durationSelectorWrap__13BJp\",\"subtitle\":\"MiningNFTAction_subtitle__1uVmz\",\"selectorList\":\"MiningNFTAction_selectorList__vnkcq\",\"nftSelectorListItem\":\"MiningNFTAction_nftSelectorListItem__314s3\",\"active\":\"MiningNFTAction_active__2aowR\",\"durationSelectorListItem\":\"MiningNFTAction_durationSelectorListItem__2sIgz\",\"nftPrice\":\"MiningNFTAction_nftPrice__vVoE0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1CTzX\",\"menuIcon\":\"Header_menuIcon__2sryw\",\"iconWrap\":\"Header_iconWrap__18ecu\",\"navWrap\":\"Header_navWrap__T7JPS\",\"navLink\":\"Header_navLink__3Cvbd\",\"active\":\"Header_active__3GX0s\",\"walletWrap\":\"Header_walletWrap__U7R6c\",\"langButton\":\"Header_langButton__3G48_\",\"menu\":\"Header_menu__Zy7KP\",\"walletButton\":\"Header_walletButton__K19wR\",\"mobileLangButton\":\"Header_mobileLangButton__29xze\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MiningLeaderboard\":\"MiningLeaderboard_MiningLeaderboard__GXauH\",\"titleWrap\":\"MiningLeaderboard_titleWrap__Oi2_D\",\"listWrap\":\"MiningLeaderboard_listWrap__3_bxP\",\"listTitle\":\"MiningLeaderboard_listTitle__18xqM\",\"list\":\"MiningLeaderboard_list__YRUEF\",\"listItem\":\"MiningLeaderboard_listItem__3bF34\",\"ordinal\":\"MiningLeaderboard_ordinal__2Cy5J\",\"address\":\"MiningLeaderboard_address__jE9q0\",\"reward\":\"MiningLeaderboard_reward__10qmd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Countdown\":\"Countdown_Countdown__1pxLg\",\"countdownCol\":\"Countdown_countdownCol__1bYb5\",\"colon\":\"Countdown_colon__20AYY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MiningProfile\":\"MiningProfile_MiningProfile__3FTnk\",\"header\":\"MiningProfile_header__1p8ja\",\"stats\":\"MiningProfile_stats__-htcw\",\"statsItem\":\"MiningProfile_statsItem__1NAcy\",\"miningList\":\"MiningProfile_miningList__2IjoA\"};"],"sourceRoot":""}